@{
    Layout = "";
}
@model ShinyBirthday.Web.Models.Shiny.ShinyInfoView
<!DOCTYPE html>
<html lang="en">
<head>
    <title>Image Wall with jQuery and CSS3</title>
    <link rel="shortcut icon" href="../../Content/Images/QTS.ico" type="image/x-icon" />
    <meta charset="UTF-8" />
    <meta name="description" content="Image Wall with jQuery and CSS3" />
    <meta name="keywords" content="jquery, css3, images, wall, thumbnails, slide, animate" />
    <meta name="author" content="Codrops" />
    <link rel="stylesheet" type="text/css" href="../../Content/ImgWall/css/style.css" />
</head>
<body>
    <div class="content">
        <header>
				<h1>A Shiny World</h1>
				<span>Image Wall * 鲜艳</span>
			</header>
        <div class="iw_wrapper">
            <ul class="iw_thumbs" id="iw_thumbs">
                @for (int i = 1; i <= Model.Visitorvolume; i++)
                {
                    string urlthumbs = "../../Content/ImgWall/images/thumbs/" + i + ".jpg";
                    string urlfull = "../../Content/ImgWall/images/full/" + i + ".jpg";
                    <li>
                        <img src="@urlthumbs" data-img="@urlfull"
                            alt="Thumb1" /><div>
                                <h2>
                                    Shiny</h2>
                                <p>
                                    I always beside you never go far.</p>
                            </div>
                    </li>
                    
                }
            </ul>
        </div>
        <div id="iw_ribbon" class="iw_ribbon">
            <span class="iw_close"></span><span class="iw_zoom">Click thumb to zoom</span>
        </div>
    </div>
    <script type="text/javascript" src="../../Content/ImgWall/js/jquery.min.js"></script>
    <script type="text/javascript" src="../../Content/ImgWall/js/jquery.masonry.min.js"></script>
    <script type="text/javascript" src="../../Content/ImgWall/js/jquery.easing.1.3.js"></script>
    <script type="text/javascript">
        $(window).load(function () {
            var $iw_thumbs = $('#iw_thumbs'),
					$iw_ribbon = $('#iw_ribbon'),
					$iw_ribbon_close = $iw_ribbon.children('span.iw_close'),
					$iw_ribbon_zoom = $iw_ribbon.children('span.iw_zoom');

            ImageWall = (function () {
                var w_dim,
							current = -1,
							isRibbonShown = false,
							isFullMode = false,
							ribbonAnim = { speed: 500, easing: 'easeOutExpo' },
							imgAnim = { speed: 400, easing: 'jswing' },
							init = function () {
							    $iw_thumbs.imagesLoaded(function () {
							        $iw_thumbs.masonry({
							            isAnimated: true
							        });
							    });
							    getWindowsDim();
							    initEventsHandler();
							},
							getWindowsDim = function () {
							    w_dim = {
							        width: $(window).width(),
							        height: $(window).height()
							    };
							},
							initEventsHandler = function () {

							    $iw_thumbs.delegate('li', 'click', function () {
							        if ($iw_ribbon.is(':animated')) return false;

							        var $el = $(this);

							        if ($el.data('ribbon')) {
							            showFullImage($el);
							        }
							        else if (!isRibbonShown) {
							            isRibbonShown = true;

							            $el.data('ribbon', true);

							            current = $el.index();

							            showRibbon($el);
							        }
							    });

							    $iw_ribbon_close.bind('click', closeRibbon);

							    $(window).bind('resize', function () {
							        getWindowsDim();
							        if ($iw_ribbon.is(':animated'))
							            return false;
							        closeRibbon();
							    })
								         .bind('scroll', function () {
								             if ($iw_ribbon.is(':animated'))
								                 return false;
								             closeRibbon();
								         });

							},
							showRibbon = function ($el) {
							    var $img = $el.children('img'),
									$descrp = $img.next();

							    $iw_thumbs.children('li').not($el).animate({ opacity: 0.2 }, imgAnim.speed);

							    $img.css('z-index', 100)
									.data('originalHeight', $img.height())
									.stop()
									.animate({
									    height: '100px'
									}, imgAnim.speed, imgAnim.easing);

							    var ribbonCssParam = {
							        top: $el.offset().top - $(window).scrollTop() - 6 + 'px'
							    },
									descriptionCssParam,
									dir;

							    if ($el.offset().left < (w_dim.width / 2)) {
							        dir = 'left';
							        ribbonCssParam.left = 0;
							        ribbonCssParam.right = 'auto';
							    }
							    else {
							        dir = 'right';
							        ribbonCssParam.right = 0;
							        ribbonCssParam.left = 'auto';
							    }

							    $iw_ribbon.css(ribbonCssParam)
								          .show()
										  .stop()
										  .animate({ width: '100%' }, ribbonAnim.speed, ribbonAnim.easing, function () {
										      switch (dir) {
										          case 'left':
										              descriptionCssParam = {
										                  'left': $img.outerWidth(true) + 'px',
										                  'text-align': 'left'
										              };
										              break;
										          case 'right':
										              descriptionCssParam = {
										                  'left': '-200px',
										                  'text-align': 'right'
										              };
										              break;
										      };
										      $descrp.css(descriptionCssParam).fadeIn();
										      $iw_ribbon_close.show();
										      $iw_ribbon_zoom.show();
										  });

							},
							closeRibbon = function () {
							    isRibbonShown = false

							    $iw_ribbon_close.hide();
							    $iw_ribbon_zoom.hide();

							    if (!isFullMode) {

							        var $el = $iw_thumbs.children('li').eq(current);

							        resetWall($el);

							        $iw_ribbon.stop()
											  .animate({ width: '0%' }, ribbonAnim.speed, ribbonAnim.easing);

							    }
							    else {
							        $iw_ribbon.stop().animate({
							            opacity: 0.8,
							            height: '0px',
							            marginTop: w_dim.height / 2 + 'px'
							        }, ribbonAnim.speed, function () {
							            $iw_ribbon.css({
							                'width': '0%',
							                'height': '126px',
							                'margin-top': '0px'
							            }).children('img').remove();
							        });

							        isFullMode = false;
							    }
							},
							resetWall = function ($el) {
							    var $img = $el.children('img'),
									$descrp = $img.next();

							    $el.data('ribbon', false);

							    $img.css('z-index', 1).stop().animate({
							        height: $img.data('originalHeight')
							    }, imgAnim.speed, imgAnim.easing);

							    $descrp.fadeOut();

							    $iw_thumbs.children('li').not($el).animate({ opacity: 1 }, imgAnim.speed);
							},
							showFullImage = function ($el) {
							    isFullMode = true;

							    $iw_ribbon_close.hide();

							    var $img = $el.children('img'),
									large = $img.data('img'),

									$loading = $('<span class="iw_loading"></span>');

							    $el.append($loading);

							    $('<img/>').load(function () {
							        var $largeImage = $(this);

							        $loading.remove();

							        $iw_ribbon_zoom.hide();

							        resizeImage($largeImage);

							        resetWall($el);

							        $iw_ribbon.stop().animate({
							            opacity: 1,
							            height: '0px',
							            marginTop: '63px'
							        }, ribbonAnim.speed, function () {
							            $iw_ribbon.prepend($largeImage);

							            $iw_ribbon_close.show();

							            $iw_ribbon.animate({
							                height: '100%',
							                marginTop: '0px',
							                top: '0px'
							            }, ribbonAnim.speed);
							        });
							    }).attr('src', large);

							},
							resizeImage = function ($image) {
							    var widthMargin = 100,
									heightMargin = 100,

									windowH = w_dim.height - heightMargin,
									windowW = w_dim.width - widthMargin,
									theImage = new Image();

							    theImage.src = $image.attr("src");

							    var imgwidth = theImage.width,
									imgheight = theImage.height;

							    if ((imgwidth > windowW) || (imgheight > windowH)) {
							        if (imgwidth > imgheight) {
							            var newwidth = windowW,
											ratio = imgwidth / windowW,
											newheight = imgheight / ratio;

							            theImage.height = newheight;
							            theImage.width = newwidth;

							            if (newheight > windowH) {
							                var newnewheight = windowH,
												newratio = newheight / windowH,
												newnewwidth = newwidth / newratio;

							                theImage.width = newnewwidth;
							                theImage.height = newnewheight;
							            }
							        }
							        else {
							            var newheight = windowH,
											ratio = imgheight / windowH,
											newwidth = imgwidth / ratio;

							            theImage.height = newheight;
							            theImage.width = newwidth;

							            if (newwidth > windowW) {
							                var newnewwidth = windowW,
											    newratio = newwidth / windowW,
												newnewheight = newheight / newratio;

							                theImage.height = newnewheight;
							                theImage.width = newnewwidth;
							            }
							        }
							    }

							    $image.css({
							        //'width': theImage.width + 'px',
							        //'height': theImage.height + 'px',
							        'margin-left': -300 + 'px', // -theImage.width / 2 + 'px',
							        'margin-top': -200 + 'px'// -theImage.height / 2 + 'px'
							    });
							};

                return { init: init };
            })();

            ImageWall.init();
        });
    </script>
</body>
</html>
